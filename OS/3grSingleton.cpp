
Описание через призму инкапсуляции:
Singleton — это порождающий паттерн, который гарантирует, что у класса есть только один экземпляр, и предоставляет глобальную 
точку доступа к этому экземпляру. Он использует принцип инкапсуляции, чтобы скрыть создание экземпляра и предоставить точку доступа,
через которую клиенты могут получить этот экземпляр. Класс Singleton обычно содержит закрытое статическое поле для хранения экземпляра
и статический метод для получения этого экземпляра.

Пример использования на практике:

#include <iostream>

class Singleton {
private:
    static Singleton* instance; // Статическое поле для хранения единственного экземпляра
    Singleton() {} // Закрытый конструктор

public:
    static Singleton* getInstance() {
        if (!instance) {
            instance = new Singleton();
        }
        return instance;
    }

    // Другие методы и данные класса
};

int main() {
    Singleton* obj1 = Singleton::getInstance();
    Singleton* obj2 = Singleton::getInstance();

    // obj1 и obj2 указывают на один и тот же экземпляр Singleton
    // Проверка obj1 == obj2 вернет true
    return 0;
}
